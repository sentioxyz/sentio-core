load("@aspect_bazel_lib//lib:expand_template.bzl", "expand_template")
load("@gazelle//:def.bzl", "gazelle")
load("@npm//:defs.bzl", "npm_link_all_packages")
# load("@npm//:next/package_json.bzl", next_bin = "bin")

load("@rules_go//go:def.bzl", "TOOLS_NOGO", "nogo")
load("@rules_multirun//:defs.bzl", "multirun")
load("@rules_uv//uv:pip.bzl", "pip_compile")

nogo(
    name = "my_nogo",
    config = ":nogo-config.json",
    visibility = ["//visibility:public"],
    deps = TOOLS_NOGO,
)

gazelle(
    name = "gazelle",
)

npm_link_all_packages(name = "node_modules")

# next_bin.next_binary(
#     name = "next_js_binary",
#     visibility = ["//visibility:public"],
# )

platform(
    name = "linux_amd64",
    constraint_values = [
        "@platforms//os:linux",
        "@platforms//cpu:x86_64",
    ],
    visibility = ["//visibility:public"],
)

#platform(
#    name = "linux_arm64",
#    constraint_values = [
#        "@platforms//os:linux",
#        "@platforms//cpu:arm64",
#    ],
#    visibility = ["//visibility:public"],
#)

expand_template(
    name = "stamped",
    out = "_stamped.tags.txt",
    stamp_substitutions = {"dev": "{{VERSION}}"},
    template = ["dev"],
    visibility = ["//visibility:public"],
)

pip_compile(
    name = "generate_requirements_linux_txt",
    python_platform = "x86_64-unknown-linux-gnu",
    requirements_txt = "requirements_linux.txt",
)

pip_compile(
    name = "generate_requirements_macos_txt",
    python_platform = "aarch64-apple-darwin",
    requirements_txt = "requirements_macos.txt",
)

multirun(
    name = "generate_requirements_lock",
    commands = [
        ":generate_requirements_linux_txt",
        ":generate_requirements_macos_txt",
    ],
    # Running in a single threaded mode allows consecutive `uv` invocations to benefit
    # from the `uv` cache from the first run.
    jobs = 1,
)

# gazelle:prefix sentioxyz/sentio-core
# gazelle:resolve proto protoc-gen-openapiv2/options/openapiv2.proto      @grpc_ecosystem_grpc_gateway//protoc-gen-openapiv2/options:options_proto
# gazelle:resolve proto protoc-gen-openapiv2/options/annotations.proto    @grpc_ecosystem_grpc_gateway//protoc-gen-openapiv2/options:options_proto
# gazelle:resolve proto go protoc-gen-openapiv2/options/annotations.proto @grpc_ecosystem_grpc_gateway//protoc-gen-openapiv2/options

# gazelle:resolve proto proto scip.proto @com_github_sourcegraph_scip//:scip_proto
# gazelle:resolve proto go    scip.proto @com_github_sourcegraph_scip//bindings/go/scip

# gazelle:resolve proto google/api/api.proto              @googleapis//google/api:api_proto
# gazelle:resolve proto google/api/annotations.proto      @googleapis//google/api:annotations_proto
# gazelle:resolve proto google/api/field_behavior.proto   @googleapis//google/api:field_behavior_proto
# gazelle:resolve proto google/api/httpbody.proto         @googleapis//google/api:httpbody_proto
# gazelle:resolve proto google/api/visibility.proto       @googleapis//google/api:visibility_proto
# gazelle:resolve proto google/type/money.proto           @googleapis//google/type:money_proto
# gazelle:resolve proto go google/type/money.proto        @org_golang_google_genproto//googleapis/type/money
