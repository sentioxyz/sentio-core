// This code is generated by packages/chain/src/codegen/generate-chain-id-go.ts, please do not modify directly
package chains

import "github.com/ethereum/go-ethereum/common"

var EthChains = []*EthChainInfo{&EthereumInfo, &OptimismInfo, &CronosInfo, &BscInfo, &BscTestnetInfo, &UnichainInfo, &PolygonInfo, &MantaPacificInfo, &XlayerTestnetInfo, &XlayerMainnetInfo, &OpBnbMainnetInfo, &SonicMainnetInfo, &SonicTestnetInfo, &B2MainnetInfo, &FraxtalInfo, &KucoinInfo, &CronosZkevmInfo, &ZksyncEraInfo, &CronosTestnetInfo, &AstarInfo, &DeriveInfo, &HyperEvmInfo, &PolygonZkevmInfo, &ConfluxInfo, &MetisInfo, &CoreMainnetInfo, &MoonbeamInfo, &UnichainSepoliaInfo, &SeiInfo, &SoneiumTestnetInfo, &SoneiumMainnetInfo, &SwellTestnetInfo, &SwellMainnetInfo, &TacTestnetInfo, &KarakInfo, &BevmInfo, &MerlinMainnetInfo, &MantleInfo, &BaseInfo, &MevCommitInfo, &PlasmaMainnetInfo, &PlasmaTestnetInfo, &MonadTestnetInfo, &HoleskyInfo, &HoodiInfo, &ModeInfo, &ArbitrumInfo, &HemiInfo, &AvalancheInfo, &ZircuitGarfieldTestnetInfo, &ZircuitMainnetInfo, &BobInfo, &LineaInfo, &BerachainInfo, &BlastInfo, &ChilizInfo, &TaikoInfo, &KatanaMainnetInfo, &BitlayerInfo, &ScrollInfo, &ZklinkNovaInfo, &SepoliaInfo, &EtherlinkInfo, &CornMaizenetInfo, &AuroraInfo, &BlastSepoliaInfo, &AbstractInfo, &GoatMainnetInfo, &CustomInfo}

var Chains = []*ChainInfo{}

var EthereumInfo = EthChainInfo{
  ChainInfo: ChainInfo{
    Name: "Ethereum",
    Slug: "mainnet",
    AdditionalSlugs: []string{"ethereum"},
    MainnetChainID: ChainID(EthereumID),
    ChainID: ChainID(EthereumID),
    ExplorerURL: "https://etherscan.io",
  },
  Variation: EthVariationDefault,
  TokenSymbol: "ETH",
  TokenDecimals: 18,
  TokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  PriceTokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  WrappedTokenAddress: common.HexToAddress("0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"),
  ExplorerAPI: "https://api.etherscan.io/v2",
  ExplorerAPIType: ExplorerAPITypeEtherscanV2,
}

var OptimismInfo = EthChainInfo{
  ChainInfo: ChainInfo{
    Name: "Optimism Mainnet",
    Slug: "optimism",
    AdditionalSlugs: []string{},
    MainnetChainID: ChainID(OptimismID),
    ChainID: ChainID(OptimismID),
    ExplorerURL: "https://optimistic.etherscan.io",
  },
  Variation: EthVariationOptimism,
  TokenSymbol: "ETH",
  TokenDecimals: 18,
  TokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  PriceTokenAddress: common.HexToAddress("0x4200000000000000000000000000000000000006"),
  WrappedTokenAddress: common.HexToAddress("0x4200000000000000000000000000000000000006"),
  ExplorerAPI: "https://api.etherscan.io/v2",
  ExplorerAPIType: ExplorerAPITypeEtherscanV2,
}

var CronosInfo = EthChainInfo{
  ChainInfo: ChainInfo{
    Name: "Cronos Mainnet",
    Slug: "cronos",
    AdditionalSlugs: []string{},
    MainnetChainID: ChainID(CronosID),
    ChainID: ChainID(CronosID),
    ExplorerURL: "https://explorer.cronos.org",
  },
  Variation: EthVariationDefault,
  TokenSymbol: "CRO",
  TokenDecimals: 18,
  TokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  PriceTokenAddress: common.HexToAddress("0x5c7f8a570d578ed84e63fdfa7b1ee72deae1ae23"),
  WrappedTokenAddress: common.HexToAddress("0x5c7f8a570d578ed84e63fdfa7b1ee72deae1ae23"),
  ExplorerAPI: "https://api.etherscan.io/v2",
  ExplorerAPIType: ExplorerAPITypeEtherscanV2,
}

var BscInfo = EthChainInfo{
  ChainInfo: ChainInfo{
    Name: "Binance Smart Chain",
    Slug: "bsc",
    AdditionalSlugs: []string{},
    MainnetChainID: ChainID(BSCID),
    ChainID: ChainID(BSCID),
    ExplorerURL: "https://bscscan.com",
  },
  Variation: EthVariationDefault,
  TokenSymbol: "BNB",
  TokenDecimals: 18,
  TokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  PriceTokenAddress: common.HexToAddress("0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c"),
  WrappedTokenAddress: common.HexToAddress("0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c"),
  ExplorerAPI: "https://api.etherscan.io/v2",
  ExplorerAPIType: ExplorerAPITypeEtherscanV2,
}

var BscTestnetInfo = EthChainInfo{
  ChainInfo: ChainInfo{
    Name: "Binance Smart Chain Testnet",
    Slug: "bsc-testnet",
    AdditionalSlugs: []string{},
    MainnetChainID: ChainID(BSCID),
    ChainID: ChainID(BscTestnetID),
    ExplorerURL: "https://testnet.bscscan.com",
  },
  Variation: EthVariationDefault,
  TokenSymbol: "tBNB",
  TokenDecimals: 18,
  TokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  PriceTokenAddress: common.HexToAddress("0xae13d989dac2f0debff460ac112a837c89baa7cd"),
  WrappedTokenAddress: common.HexToAddress("0xae13d989dac2f0debff460ac112a837c89baa7cd"),
  ExplorerAPI: "https://api.etherscan.io/v2",
  ExplorerAPIType: ExplorerAPITypeEtherscanV2,
}

var UnichainInfo = EthChainInfo{
  ChainInfo: ChainInfo{
    Name: "Unichain",
    Slug: "unichain-mainnet",
    AdditionalSlugs: []string{},
    MainnetChainID: ChainID(UnichainID),
    ChainID: ChainID(UnichainID),
    ExplorerURL: "https://unichain.blockscout.com",
  },
  Variation: EthVariationOptimism,
  TokenSymbol: "ETH",
  TokenDecimals: 18,
  TokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  PriceTokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  WrappedTokenAddress: common.HexToAddress("0x4200000000000000000000000000000000000006"),
  ExplorerAPI: "https://unichain.blockscout.com",
  ExplorerAPIType: ExplorerAPITypeBlockscout,
}

var PolygonInfo = EthChainInfo{
  ChainInfo: ChainInfo{
    Name: "Polygon",
    Slug: "matic",
    AdditionalSlugs: []string{"polygon"},
    MainnetChainID: ChainID(PolygonID),
    ChainID: ChainID(PolygonID),
    ExplorerURL: "https://polygonscan.com",
  },
  Variation: EthVariationDefault,
  TokenSymbol: "MATIC",
  TokenDecimals: 18,
  TokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  PriceTokenAddress: common.HexToAddress("0x0d500b1d8e8ef31e21c99d1db9a6444d3adf1270"),
  WrappedTokenAddress: common.HexToAddress("0x0d500b1d8e8ef31e21c99d1db9a6444d3adf1270"),
  ExplorerAPI: "https://api.etherscan.io/v2",
  ExplorerAPIType: ExplorerAPITypeEtherscanV2,
}

var MantaPacificInfo = EthChainInfo{
  ChainInfo: ChainInfo{
    Name: "Manta Pacific",
    Slug: "manta-pacific-mainnet",
    AdditionalSlugs: []string{},
    MainnetChainID: ChainID(MantaPacificID),
    ChainID: ChainID(MantaPacificID),
    ExplorerURL: "https://pacific-explorer.manta.network",
  },
  Variation: EthVariationOptimism,
  TokenSymbol: "ETH",
  TokenDecimals: 18,
  TokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  PriceTokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  WrappedTokenAddress: common.HexToAddress("0x0Dc808adcE2099A9F62AA87D9670745AbA741746"),
  ExplorerAPI: "https://pacific-explorer.manta.network",
  ExplorerAPIType: ExplorerAPITypeBlockscout,
}

var XlayerTestnetInfo = EthChainInfo{
  ChainInfo: ChainInfo{
    Name: "X Layer Testnet",
    Slug: "xlayer-sepolia",
    AdditionalSlugs: []string{},
    MainnetChainID: ChainID(XlayerMainnetID),
    ChainID: ChainID(XlayerTestnetID),
    ExplorerURL: "https://www.oklink.com/xlayer-test",
  },
  Variation: EthVariationPolygonZkEVM,
  TokenSymbol: "ETH",
  TokenDecimals: 18,
  TokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  PriceTokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  WrappedTokenAddress: common.HexToAddress("0xa749ad81913cdc19881ebeb64631df72be708335"),
  ExplorerAPI: "https://www.oklink.com/api/v5/explorer",
  ExplorerAPIType: ExplorerAPITypeOkLink,
}

var XlayerMainnetInfo = EthChainInfo{
  ChainInfo: ChainInfo{
    Name: "X Layer Mainnet",
    Slug: "xlayer-mainnet",
    AdditionalSlugs: []string{},
    MainnetChainID: ChainID(XlayerMainnetID),
    ChainID: ChainID(XlayerMainnetID),
    ExplorerURL: "https://www.oklink.com/xlayer",
  },
  Variation: EthVariationPolygonZkEVM,
  TokenSymbol: "ETH",
  TokenDecimals: 18,
  TokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  PriceTokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  WrappedTokenAddress: common.HexToAddress("0x5a77f1443d16ee5761d310e38b62f77f726bc71c"),
  ExplorerAPI: "https://www.oklink.com/api/v5/explorer",
  ExplorerAPIType: ExplorerAPITypeOkLink,
}

var OpBnbMainnetInfo = EthChainInfo{
  ChainInfo: ChainInfo{
    Name: "opBNB Mainnet",
    Slug: "opbnb",
    AdditionalSlugs: []string{},
    MainnetChainID: ChainID(OpBnbMainnetID),
    ChainID: ChainID(OpBnbMainnetID),
    ExplorerURL: "https://opbnb.bscscan.com",
  },
  Variation: EthVariationOptimism,
  TokenSymbol: "BNB",
  TokenDecimals: 18,
  TokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  PriceTokenAddress: common.HexToAddress("0x4200000000000000000000000000000000000006"),
  WrappedTokenAddress: common.HexToAddress("0x4200000000000000000000000000000000000006"),
  ExplorerAPI: "https://api.etherscan.io/v2",
  ExplorerAPIType: ExplorerAPITypeEtherscanV2,
}

var SonicMainnetInfo = EthChainInfo{
  ChainInfo: ChainInfo{
    Name: "Sonic Mainnet",
    Slug: "sonic-mainnet",
    AdditionalSlugs: []string{},
    MainnetChainID: ChainID(SonicMainnetID),
    ChainID: ChainID(SonicMainnetID),
    ExplorerURL: "https://sonicscan.org",
  },
  Variation: EthVariationDefault,
  TokenSymbol: "S",
  TokenDecimals: 18,
  TokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  PriceTokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  WrappedTokenAddress: common.HexToAddress("0x000000000000000000000000000000000000800A"),
  ExplorerAPI: "https://api.etherscan.io/v2",
  ExplorerAPIType: ExplorerAPITypeEtherscanV2,
}

var SonicTestnetInfo = EthChainInfo{
  ChainInfo: ChainInfo{
    Name: "Sonic Testnet",
    Slug: "sonic-testnet",
    AdditionalSlugs: []string{},
    MainnetChainID: ChainID(SonicMainnetID),
    ChainID: ChainID(SonicTestnetID),
    ExplorerURL: "https://testnet.sonicscan.org",
  },
  Variation: EthVariationDefault,
  TokenSymbol: "S",
  TokenDecimals: 18,
  TokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  PriceTokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  WrappedTokenAddress: common.HexToAddress("0x000000000000000000000000000000000000800A"),
  ExplorerAPI: "https://api.etherscan.io/v2",
  ExplorerAPIType: ExplorerAPITypeEtherscanV2,
}

var B2MainnetInfo = EthChainInfo{
  ChainInfo: ChainInfo{
    Name: "B2 Mainnet",
    Slug: "b2-mainnet",
    AdditionalSlugs: []string{},
    MainnetChainID: ChainID(B2MainnetID),
    ChainID: ChainID(B2MainnetID),
    ExplorerURL: "https://explorer.bsquared.network",
  },
  Variation: EthVariationOptimism,
  TokenSymbol: "BTC",
  TokenDecimals: 18,
  TokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  PriceTokenAddress: common.HexToAddress("0x4200000000000000000000000000000000000006"),
  WrappedTokenAddress: common.HexToAddress("0x4200000000000000000000000000000000000006"),
  ExplorerAPI: "https://explorer.bsquared.network/api",
  ExplorerAPIType: ExplorerAPITypeL2Scan,
}

var FraxtalInfo = EthChainInfo{
  ChainInfo: ChainInfo{
    Name: "Fraxtal Mainnet",
    Slug: "frax-mainnet",
    AdditionalSlugs: []string{},
    MainnetChainID: ChainID(FraxtalID),
    ChainID: ChainID(FraxtalID),
    ExplorerURL: "https://fraxscan.com",
  },
  Variation: EthVariationOptimism,
  TokenSymbol: "ETH",
  TokenDecimals: 18,
  TokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  PriceTokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  WrappedTokenAddress: common.HexToAddress("0xFC00000000000000000000000000000000000006"),
  ExplorerAPI: "https://api.etherscan.io/v2",
  ExplorerAPIType: ExplorerAPITypeEtherscanV2,
}

var KucoinInfo = EthChainInfo{
  ChainInfo: ChainInfo{
    Name: "KCC Mainnet",
    Slug: "kucoin",
    AdditionalSlugs: []string{},
    MainnetChainID: ChainID(KucoinID),
    ChainID: ChainID(KucoinID),
    ExplorerURL: "https://scan.kcc.io",
  },
  Variation: EthVariationDefault,
  TokenSymbol: "KCS",
  TokenDecimals: 18,
  TokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  PriceTokenAddress: common.HexToAddress("0x4446Fc4eb47f2f6586f9fAAb68B3498F86C07521"),
  WrappedTokenAddress: common.HexToAddress("0x4446Fc4eb47f2f6586f9fAAb68B3498F86C07521"),
  ExplorerAPI: "https://scan.kcc.io",
  ExplorerAPIType: ExplorerAPITypeEtherscan,
}

var CronosZkevmInfo = EthChainInfo{
  ChainInfo: ChainInfo{
    Name: "Cronos zkEVM",
    Slug: "cronos-zkevm",
    AdditionalSlugs: []string{},
    MainnetChainID: ChainID(CronosZkevmID),
    ChainID: ChainID(CronosZkevmID),
    ExplorerURL: "https://explorer.zkevm.cronos.org",
  },
  Variation: EthVariationZkSync,
  TokenSymbol: "zkCRO",
  TokenDecimals: 18,
  TokenAddress: common.HexToAddress("0x000000000000000000000000000000000000800a"),
  PriceTokenAddress: common.HexToAddress("0x000000000000000000000000000000000000800a"),
  WrappedTokenAddress: common.HexToAddress("0xc1bf55ee54e16229d9b369a5502bfe5fc9f20b6d"),
  ExplorerAPI: "",
  ExplorerAPIType: ExplorerAPITypeUnknown,
}

var ZksyncEraInfo = EthChainInfo{
  ChainInfo: ChainInfo{
    Name: "zkSync Era",
    Slug: "zksync-era",
    AdditionalSlugs: []string{},
    MainnetChainID: ChainID(ZksyncEraID),
    ChainID: ChainID(ZksyncEraID),
    ExplorerURL: "https://explorer.zksync.io",
  },
  Variation: EthVariationZkSync,
  TokenSymbol: "ETH",
  TokenDecimals: 18,
  TokenAddress: common.HexToAddress("0x000000000000000000000000000000000000800A"),
  PriceTokenAddress: common.HexToAddress("0x000000000000000000000000000000000000800A"),
  WrappedTokenAddress: common.HexToAddress("0x000000000000000000000000000000000000800A"),
  ExplorerAPI: "https://block-explorer-api.mainnet.zksync.io",
  ExplorerAPIType: ExplorerAPITypeEtherscan,
}

var CronosTestnetInfo = EthChainInfo{
  ChainInfo: ChainInfo{
    Name: "Cronos Testnet",
    Slug: "cronos-testnet",
    AdditionalSlugs: []string{},
    MainnetChainID: ChainID(CronosID),
    ChainID: ChainID(CronosTestnetID),
    ExplorerURL: "https://explorer.cronos.org/testnet",
  },
  Variation: EthVariationDefault,
  TokenSymbol: "CRO",
  TokenDecimals: 18,
  TokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  PriceTokenAddress: common.HexToAddress("0x6a3173618859c7cd40faf6921b5e9eb6a76f1fd4"),
  WrappedTokenAddress: common.HexToAddress("0x6a3173618859c7cd40faf6921b5e9eb6a76f1fd4"),
  ExplorerAPI: "https://api.etherscan.io/v2",
  ExplorerAPIType: ExplorerAPITypeEtherscanV2,
}

var AstarInfo = EthChainInfo{
  ChainInfo: ChainInfo{
    Name: "Astar",
    Slug: "astar",
    AdditionalSlugs: []string{},
    MainnetChainID: ChainID(AstarID),
    ChainID: ChainID(AstarID),
    ExplorerURL: "https://astar.blockscout.com",
  },
  Variation: EthVariationSubstrate,
  TokenSymbol: "ASTR",
  TokenDecimals: 18,
  TokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  PriceTokenAddress: common.HexToAddress("0xaeaaf0e2c81af264101b9129c00f4440ccf0f720"),
  WrappedTokenAddress: common.HexToAddress("0xaeaaf0e2c81af264101b9129c00f4440ccf0f720"),
  ExplorerAPI: "https://astar.blockscout.com",
  ExplorerAPIType: ExplorerAPITypeBlockscout,
}

var DeriveInfo = EthChainInfo{
  ChainInfo: ChainInfo{
    Name: "Derive Mainnet",
    Slug: "derive-mainnet",
    AdditionalSlugs: []string{},
    MainnetChainID: ChainID(DeriveID),
    ChainID: ChainID(DeriveID),
    ExplorerURL: "https://explorer.lyra.finance",
  },
  Variation: EthVariationOptimism,
  TokenSymbol: "ETH",
  TokenDecimals: 18,
  TokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  PriceTokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  WrappedTokenAddress: common.HexToAddress("0x15CEcd5190A43C7798dD2058308781D0662e678E"),
  ExplorerAPI: "https://explorer.lyra.finance",
  ExplorerAPIType: ExplorerAPITypeBlockscout,
}

var HyperEvmInfo = EthChainInfo{
  ChainInfo: ChainInfo{
    Name: "HyperEVM",
    Slug: "hyperevm",
    AdditionalSlugs: []string{"hyper-evm"},
    MainnetChainID: ChainID(HyperEvmID),
    ChainID: ChainID(HyperEvmID),
    ExplorerURL: "https://hyperevmscan.io",
  },
  Variation: EthVariationDefault,
  TokenSymbol: "HYPE",
  TokenDecimals: 18,
  TokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  PriceTokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  WrappedTokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  ExplorerAPI: "https://hyperevmscan.io/v2",
  ExplorerAPIType: ExplorerAPITypeEtherscanV2,
}

var PolygonZkevmInfo = EthChainInfo{
  ChainInfo: ChainInfo{
    Name: "Polygon zkEVM",
    Slug: "polygon-zkevm",
    AdditionalSlugs: []string{},
    MainnetChainID: ChainID(PolygonZkevmID),
    ChainID: ChainID(PolygonZkevmID),
    ExplorerURL: "https://polygon.blockscout.com",
  },
  Variation: EthVariationPolygonZkEVM,
  TokenSymbol: "ETH",
  TokenDecimals: 18,
  TokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  PriceTokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  WrappedTokenAddress: common.HexToAddress("0x4F9A0e7FD2Bf6067db6994CF12E4495Df938E6e9"),
  ExplorerAPI: "https://polygon.blockscout.com",
  ExplorerAPIType: ExplorerAPITypeBlockscout,
}

var ConfluxInfo = EthChainInfo{
  ChainInfo: ChainInfo{
    Name: "Conflux eSpace",
    Slug: "conflux-espace",
    AdditionalSlugs: []string{},
    MainnetChainID: ChainID(ConfluxID),
    ChainID: ChainID(ConfluxID),
    ExplorerURL: "https://evm.confluxscan.io",
  },
  Variation: EthVariationDefault,
  TokenSymbol: "CFX",
  TokenDecimals: 18,
  TokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  PriceTokenAddress: common.HexToAddress("0x14b2d3bc65e74dae1030eafd8ac30c533c976a9b"),
  WrappedTokenAddress: common.HexToAddress("0x14b2d3bc65e74dae1030eafd8ac30c533c976a9b"),
  ExplorerAPI: "https://evmapi.confluxscan.io",
  ExplorerAPIType: ExplorerAPITypeEtherscan,
}

var MetisInfo = EthChainInfo{
  ChainInfo: ChainInfo{
    Name: "Metis",
    Slug: "metis",
    AdditionalSlugs: []string{},
    MainnetChainID: ChainID(MetisID),
    ChainID: ChainID(MetisID),
    ExplorerURL: "https://explorer.metis.io",
  },
  Variation: EthVariationDefault,
  TokenSymbol: "METIS",
  TokenDecimals: 18,
  TokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  PriceTokenAddress: common.HexToAddress("0x75cb093E4D61d2A2e65D8e0BBb01DE8d89b53481"),
  WrappedTokenAddress: common.HexToAddress("0x75cb093E4D61d2A2e65D8e0BBb01DE8d89b53481"),
  ExplorerAPI: "https://api.routescan.io/v2/network/mainnet/evm/1088/etherscan/",
  ExplorerAPIType: ExplorerAPITypeEtherscan,
}

var CoreMainnetInfo = EthChainInfo{
  ChainInfo: ChainInfo{
    Name: "Core",
    Slug: "core-mainnet",
    AdditionalSlugs: []string{},
    MainnetChainID: ChainID(CoreMainnetID),
    ChainID: ChainID(CoreMainnetID),
    ExplorerURL: "https://scan.coredao.org",
  },
  Variation: EthVariationDefault,
  TokenSymbol: "CORE",
  TokenDecimals: 18,
  TokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  PriceTokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  WrappedTokenAddress: common.HexToAddress("0x40375c92d9faf44d2f9db9bd9ba41a3317a2404f"),
  ExplorerAPI: "",
  ExplorerAPIType: ExplorerAPITypeUnknown,
}

var MoonbeamInfo = EthChainInfo{
  ChainInfo: ChainInfo{
    Name: "Moonbeam",
    Slug: "moonbeam",
    AdditionalSlugs: []string{},
    MainnetChainID: ChainID(MoonbeamID),
    ChainID: ChainID(MoonbeamID),
    ExplorerURL: "https://moonscan.io",
  },
  Variation: EthVariationSubstrate,
  TokenSymbol: "GLMR",
  TokenDecimals: 18,
  TokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  PriceTokenAddress: common.HexToAddress("0xacc15dc74880c9944775448304b263d191c6077f"),
  WrappedTokenAddress: common.HexToAddress("0xacc15dc74880c9944775448304b263d191c6077f"),
  ExplorerAPI: "https://api.etherscan.io/v2",
  ExplorerAPIType: ExplorerAPITypeEtherscanV2,
}

var UnichainSepoliaInfo = EthChainInfo{
  ChainInfo: ChainInfo{
    Name: "Unichain Sepolia",
    Slug: "unichain-sepolia",
    AdditionalSlugs: []string{},
    MainnetChainID: ChainID(UnichainID),
    ChainID: ChainID(UnichainSepoliaID),
    ExplorerURL: "https://unichain-sepolia.blockscout.com",
  },
  Variation: EthVariationOptimism,
  TokenSymbol: "ETH",
  TokenDecimals: 18,
  TokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  PriceTokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  WrappedTokenAddress: common.HexToAddress("0x4200000000000000000000000000000000000006"),
  ExplorerAPI: "https://unichain-sepolia.blockscout.com",
  ExplorerAPIType: ExplorerAPITypeBlockscout,
}

var SeiInfo = EthChainInfo{
  ChainInfo: ChainInfo{
    Name: "Sei Mainnet",
    Slug: "sei",
    AdditionalSlugs: []string{},
    MainnetChainID: ChainID(SeiID),
    ChainID: ChainID(SeiID),
    ExplorerURL: "https://seistream.app",
  },
  Variation: EthVariationDefault,
  TokenSymbol: "ETH",
  TokenDecimals: 18,
  TokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  PriceTokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  WrappedTokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  ExplorerAPI: "",
  ExplorerAPIType: ExplorerAPITypeUnknown,
}

var SoneiumTestnetInfo = EthChainInfo{
  ChainInfo: ChainInfo{
    Name: "Soneium Testnet",
    Slug: "soneium-minato",
    AdditionalSlugs: []string{},
    MainnetChainID: ChainID(SoneiumMainnetID),
    ChainID: ChainID(SoneiumTestnetID),
    ExplorerURL: "https://soneium-minato.blockscout.com",
  },
  Variation: EthVariationOptimism,
  TokenSymbol: "ETH",
  TokenDecimals: 18,
  TokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  PriceTokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  WrappedTokenAddress: common.HexToAddress("0x728F2745410A56620B50a6E0592743450e08Cac6"),
  ExplorerAPI: "https://soneium-minato.blockscout.com",
  ExplorerAPIType: ExplorerAPITypeBlockscout,
}

var SoneiumMainnetInfo = EthChainInfo{
  ChainInfo: ChainInfo{
    Name: "Soneium Mainnet",
    Slug: "soneium-mainnet",
    AdditionalSlugs: []string{},
    MainnetChainID: ChainID(SoneiumMainnetID),
    ChainID: ChainID(SoneiumMainnetID),
    ExplorerURL: "https://soneium.blockscout.com",
  },
  Variation: EthVariationOptimism,
  TokenSymbol: "ETH",
  TokenDecimals: 18,
  TokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  PriceTokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  WrappedTokenAddress: common.HexToAddress("0x4200000000000000000000000000000000000006"),
  ExplorerAPI: "https://soneium.blockscout.com",
  ExplorerAPIType: ExplorerAPITypeBlockscout,
}

var SwellTestnetInfo = EthChainInfo{
  ChainInfo: ChainInfo{
    Name: "Swell Testnet",
    Slug: "swell-testnet",
    AdditionalSlugs: []string{},
    MainnetChainID: ChainID(SwellMainnetID),
    ChainID: ChainID(SwellTestnetID),
    ExplorerURL: "https://swell-testnet-explorer.alt.technology",
  },
  Variation: EthVariationOptimism,
  TokenSymbol: "ETH",
  TokenDecimals: 18,
  TokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  PriceTokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  WrappedTokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  ExplorerAPI: "https://swell-testnet-explorer.alt.technology",
  ExplorerAPIType: ExplorerAPITypeBlockscout,
}

var SwellMainnetInfo = EthChainInfo{
  ChainInfo: ChainInfo{
    Name: "Swell Mainnet",
    Slug: "swell-mainnet",
    AdditionalSlugs: []string{},
    MainnetChainID: ChainID(SwellMainnetID),
    ChainID: ChainID(SwellMainnetID),
    ExplorerURL: "https://explorer.swellnetwork.io",
  },
  Variation: EthVariationOptimism,
  TokenSymbol: "ETH",
  TokenDecimals: 18,
  TokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  PriceTokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  WrappedTokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  ExplorerAPI: "https://explorer.swellnetwork.io",
  ExplorerAPIType: ExplorerAPITypeBlockscout,
}

var TacTestnetInfo = EthChainInfo{
  ChainInfo: ChainInfo{
    Name: "TAC Testnet",
    Slug: "tac-testnet",
    AdditionalSlugs: []string{},
    MainnetChainID: ChainID(TacTestnetID),
    ChainID: ChainID(TacTestnetID),
    ExplorerURL: "https://turin.explorer.tac.build",
  },
  Variation: EthVariationDefault,
  TokenSymbol: "TAC",
  TokenDecimals: 18,
  TokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  PriceTokenAddress: common.HexToAddress("0x392D1cCB04d25fCBcA7D4fc0E429Dbc1F9fEe73F"),
  WrappedTokenAddress: common.HexToAddress("0x392D1cCB04d25fCBcA7D4fc0E429Dbc1F9fEe73F"),
  ExplorerAPI: "https://turin.explorer.tac.build",
  ExplorerAPIType: ExplorerAPITypeBlockscout,
}

var KarakInfo = EthChainInfo{
  ChainInfo: ChainInfo{
    Name: "Karak Mainnet",
    Slug: "karak-mainnet",
    AdditionalSlugs: []string{},
    MainnetChainID: ChainID(KarakID),
    ChainID: ChainID(KarakID),
    ExplorerURL: "https://explorer.karak.network",
  },
  Variation: EthVariationDefault,
  TokenSymbol: "ETH",
  TokenDecimals: 18,
  TokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  PriceTokenAddress: common.HexToAddress("0x4200000000000000000000000000000000000006"),
  WrappedTokenAddress: common.HexToAddress("0x4200000000000000000000000000000000000006"),
  ExplorerAPI: "https://explorer.karak.network",
  ExplorerAPIType: ExplorerAPITypeBlockscout,
}

var BevmInfo = EthChainInfo{
  ChainInfo: ChainInfo{
    Name: "BEVM",
    Slug: "bevm",
    AdditionalSlugs: []string{},
    MainnetChainID: ChainID(BevmID),
    ChainID: ChainID(BevmID),
    ExplorerURL: "https://scan.bevm.io",
  },
  Variation: EthVariationSubstrate,
  TokenSymbol: "BTC",
  TokenDecimals: 18,
  TokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  PriceTokenAddress: common.HexToAddress("0xB5136FEba197f5fF4B765E5b50c74db717796dcD"),
  WrappedTokenAddress: common.HexToAddress("0xB5136FEba197f5fF4B765E5b50c74db717796dcD"),
  ExplorerAPI: "https://scan.bevm.io",
  ExplorerAPIType: ExplorerAPITypeBlockscout,
}

var MerlinMainnetInfo = EthChainInfo{
  ChainInfo: ChainInfo{
    Name: "Merlin Mainnet",
    Slug: "merlin",
    AdditionalSlugs: []string{},
    MainnetChainID: ChainID(MerlinMainnetID),
    ChainID: ChainID(MerlinMainnetID),
    ExplorerURL: "https://scan.merlinchain.io",
  },
  Variation: EthVariationPolygonZkEVM,
  TokenSymbol: "BTC",
  TokenDecimals: 18,
  TokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  PriceTokenAddress: common.HexToAddress("0xF6D226f9Dc15d9bB51182815b320D3fBE324e1bA"),
  WrappedTokenAddress: common.HexToAddress("0xF6D226f9Dc15d9bB51182815b320D3fBE324e1bA"),
  ExplorerAPI: "https://scan.merlinchain.io/api",
  ExplorerAPIType: ExplorerAPITypeL2Scan,
}

var MantleInfo = EthChainInfo{
  ChainInfo: ChainInfo{
    Name: "Mantle",
    Slug: "mantle",
    AdditionalSlugs: []string{},
    MainnetChainID: ChainID(MantleID),
    ChainID: ChainID(MantleID),
    ExplorerURL: "https://mantlescan.xyz",
  },
  Variation: EthVariationOptimism,
  TokenSymbol: "MNT",
  TokenDecimals: 18,
  TokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  PriceTokenAddress: common.HexToAddress("0x78c1b0c915c4faa5fffa6cabf0219da63d7f4cb8"),
  WrappedTokenAddress: common.HexToAddress("0x78c1b0c915c4faa5fffa6cabf0219da63d7f4cb8"),
  ExplorerAPI: "https://api.etherscan.io/v2",
  ExplorerAPIType: ExplorerAPITypeEtherscanV2,
}

var BaseInfo = EthChainInfo{
  ChainInfo: ChainInfo{
    Name: "Base",
    Slug: "base",
    AdditionalSlugs: []string{},
    MainnetChainID: ChainID(BaseID),
    ChainID: ChainID(BaseID),
    ExplorerURL: "https://basescan.org",
  },
  Variation: EthVariationOptimism,
  TokenSymbol: "ETH",
  TokenDecimals: 18,
  TokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  PriceTokenAddress: common.HexToAddress("0x4200000000000000000000000000000000000006"),
  WrappedTokenAddress: common.HexToAddress("0x4200000000000000000000000000000000000006"),
  ExplorerAPI: "https://api.etherscan.io/v2",
  ExplorerAPIType: ExplorerAPITypeEtherscanV2,
}

var MevCommitInfo = EthChainInfo{
  ChainInfo: ChainInfo{
    Name: "MEV Commit",
    Slug: "mev-commit",
    AdditionalSlugs: []string{},
    MainnetChainID: ChainID(MevCommitID),
    ChainID: ChainID(MevCommitID),
    ExplorerURL: "https://www.mev-commit.xyz",
  },
  Variation: EthVariationDefault,
  TokenSymbol: "ETH",
  TokenDecimals: 18,
  TokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  PriceTokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  WrappedTokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  ExplorerAPI: "",
  ExplorerAPIType: ExplorerAPITypeUnknown,
}

var PlasmaMainnetInfo = EthChainInfo{
  ChainInfo: ChainInfo{
    Name: "Plasma Mainnet",
    Slug: "plasma-mainnet",
    AdditionalSlugs: []string{},
    MainnetChainID: ChainID(PlasmaMainnetID),
    ChainID: ChainID(PlasmaMainnetID),
    ExplorerURL: "https://plasmascan.to",
  },
  Variation: EthVariationDefault,
  TokenSymbol: "XPL",
  TokenDecimals: 18,
  TokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  PriceTokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  WrappedTokenAddress: common.HexToAddress("0x6100E367285b01F48D07953803A2d8dCA5D19873"),
  ExplorerAPI: "https://api.routescan.io/v2/network/mainnet/evm/9745/etherscan",
  ExplorerAPIType: ExplorerAPITypeEtherscan,
}

var PlasmaTestnetInfo = EthChainInfo{
  ChainInfo: ChainInfo{
    Name: "Plasma Testnet",
    Slug: "plasma-testnet",
    AdditionalSlugs: []string{},
    MainnetChainID: ChainID(PlasmaMainnetID),
    ChainID: ChainID(PlasmaTestnetID),
    ExplorerURL: "https://testnet.plasmascan.to",
  },
  Variation: EthVariationDefault,
  TokenSymbol: "XPL",
  TokenDecimals: 18,
  TokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  PriceTokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  WrappedTokenAddress: common.HexToAddress("0x6100E367285b01F48D07953803A2d8dCA5D19873"),
  ExplorerAPI: "https://api.routescan.io/v2/network/mainnet/evm/9746/etherscan",
  ExplorerAPIType: ExplorerAPITypeEtherscan,
}

var MonadTestnetInfo = EthChainInfo{
  ChainInfo: ChainInfo{
    Name: "Monad Testnet",
    Slug: "monad-testnet",
    AdditionalSlugs: []string{},
    MainnetChainID: ChainID(MonadTestnetID),
    ChainID: ChainID(MonadTestnetID),
    ExplorerURL: "https://testnet.monadexplorer.com",
  },
  Variation: EthVariationDefault,
  TokenSymbol: "MON",
  TokenDecimals: 18,
  TokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  PriceTokenAddress: common.HexToAddress("0x760AfE86e5de5fa0Ee542fc7B7B713e1c5425701"),
  WrappedTokenAddress: common.HexToAddress("0x760AfE86e5de5fa0Ee542fc7B7B713e1c5425701"),
  ExplorerAPI: "",
  ExplorerAPIType: ExplorerAPITypeUnknown,
}

var HoleskyInfo = EthChainInfo{
  ChainInfo: ChainInfo{
    Name: "Holesky",
    Slug: "holesky",
    AdditionalSlugs: []string{},
    MainnetChainID: ChainID(EthereumID),
    ChainID: ChainID(HoleskyID),
    ExplorerURL: "https://holesky.etherscan.io",
  },
  Variation: EthVariationDefault,
  TokenSymbol: "ETH",
  TokenDecimals: 18,
  TokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  PriceTokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  WrappedTokenAddress: common.HexToAddress("0x94373a4919B3240D86eA41593D5eBa789FEF3848"),
  ExplorerAPI: "https://api.etherscan.io/v2",
  ExplorerAPIType: ExplorerAPITypeEtherscanV2,
}

var HoodiInfo = EthChainInfo{
  ChainInfo: ChainInfo{
    Name: "Hoodi",
    Slug: "hoodi",
    AdditionalSlugs: []string{},
    MainnetChainID: ChainID(EthereumID),
    ChainID: ChainID(HoodiID),
    ExplorerURL: "https://hoodi.etherscan.io",
  },
  Variation: EthVariationDefault,
  TokenSymbol: "ETH",
  TokenDecimals: 18,
  TokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  PriceTokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  WrappedTokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  ExplorerAPI: "https://api.etherscan.io/v2",
  ExplorerAPIType: ExplorerAPITypeEtherscanV2,
}

var ModeInfo = EthChainInfo{
  ChainInfo: ChainInfo{
    Name: "Mode Mainnet",
    Slug: "mode-mainnet",
    AdditionalSlugs: []string{},
    MainnetChainID: ChainID(ModeID),
    ChainID: ChainID(ModeID),
    ExplorerURL: "https://modescan.io",
  },
  Variation: EthVariationOptimism,
  TokenSymbol: "ETH",
  TokenDecimals: 18,
  TokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  PriceTokenAddress: common.HexToAddress("0x4200000000000000000000000000000000000006"),
  WrappedTokenAddress: common.HexToAddress("0x4200000000000000000000000000000000000006"),
  ExplorerAPI: "https://api.routescan.io/v2/network/mainnet/evm/34443/etherscan",
  ExplorerAPIType: ExplorerAPITypeEtherscan,
}

var ArbitrumInfo = EthChainInfo{
  ChainInfo: ChainInfo{
    Name: "Arbitrum",
    Slug: "arbitrum-one",
    AdditionalSlugs: []string{"arbitrum"},
    MainnetChainID: ChainID(ArbitrumID),
    ChainID: ChainID(ArbitrumID),
    ExplorerURL: "https://arbiscan.io",
  },
  Variation: EthVariationArbitrum,
  TokenSymbol: "ETH",
  TokenDecimals: 18,
  TokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  PriceTokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  WrappedTokenAddress: common.HexToAddress("0x82aF49447D8a07e3bd95BD0d56f35241523fBab1"),
  ExplorerAPI: "https://api.etherscan.io/v2",
  ExplorerAPIType: ExplorerAPITypeEtherscanV2,
}

var HemiInfo = EthChainInfo{
  ChainInfo: ChainInfo{
    Name: "Hemi",
    Slug: "hemi",
    AdditionalSlugs: []string{},
    MainnetChainID: ChainID(HemiID),
    ChainID: ChainID(HemiID),
    ExplorerURL: "https://explorer.hemi.xyz",
  },
  Variation: EthVariationDefault,
  TokenSymbol: "ETH",
  TokenDecimals: 18,
  TokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  PriceTokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  WrappedTokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  ExplorerAPI: "https://explorer.hemi.xyz",
  ExplorerAPIType: ExplorerAPITypeBlockscout,
}

var AvalancheInfo = EthChainInfo{
  ChainInfo: ChainInfo{
    Name: "Avalanche",
    Slug: "avalanche",
    AdditionalSlugs: []string{},
    MainnetChainID: ChainID(AvalancheID),
    ChainID: ChainID(AvalancheID),
    ExplorerURL: "https://snowtrace.io",
  },
  Variation: EthVariationDefault,
  TokenSymbol: "ETH",
  TokenDecimals: 18,
  TokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  PriceTokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  WrappedTokenAddress: common.HexToAddress("0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7"),
  ExplorerAPI: "https://api.routescan.io/v2/network/mainnet/evm/43114/etherscan",
  ExplorerAPIType: ExplorerAPITypeEtherscan,
}

var ZircuitGarfieldTestnetInfo = EthChainInfo{
  ChainInfo: ChainInfo{
    Name: "Zircuit Garfield Testnet",
    Slug: "zircuit-garfield-testnet",
    AdditionalSlugs: []string{},
    MainnetChainID: ChainID(ZircuitMainnetID),
    ChainID: ChainID(ZircuitGarfieldTestnetID),
    ExplorerURL: "https://explorer.garfield-testnet.zircuit.com",
  },
  Variation: EthVariationOptimism,
  TokenSymbol: "ETH",
  TokenDecimals: 18,
  TokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  PriceTokenAddress: common.HexToAddress("0x4200000000000000000000000000000000000006"),
  WrappedTokenAddress: common.HexToAddress("0x4200000000000000000000000000000000000006"),
  ExplorerAPI: "",
  ExplorerAPIType: ExplorerAPITypeUnknown,
}

var ZircuitMainnetInfo = EthChainInfo{
  ChainInfo: ChainInfo{
    Name: "Zircuit Mainnet",
    Slug: "zircuit",
    AdditionalSlugs: []string{},
    MainnetChainID: ChainID(ZircuitMainnetID),
    ChainID: ChainID(ZircuitMainnetID),
    ExplorerURL: "https://explorer.zircuit.com",
  },
  Variation: EthVariationOptimism,
  TokenSymbol: "ETH",
  TokenDecimals: 18,
  TokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  PriceTokenAddress: common.HexToAddress("0x4200000000000000000000000000000000000006"),
  WrappedTokenAddress: common.HexToAddress("0x4200000000000000000000000000000000000006"),
  ExplorerAPI: "",
  ExplorerAPIType: ExplorerAPITypeUnknown,
}

var BobInfo = EthChainInfo{
  ChainInfo: ChainInfo{
    Name: "Bob Mainnet",
    Slug: "bob",
    AdditionalSlugs: []string{},
    MainnetChainID: ChainID(BobID),
    ChainID: ChainID(BobID),
    ExplorerURL: "https://explorer.gobob.xyz",
  },
  Variation: EthVariationOptimism,
  TokenSymbol: "ETH",
  TokenDecimals: 18,
  TokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  PriceTokenAddress: common.HexToAddress("0x4200000000000000000000000000000000000006"),
  WrappedTokenAddress: common.HexToAddress("0x4200000000000000000000000000000000000006"),
  ExplorerAPI: "https://explorer.gobob.xyz",
  ExplorerAPIType: ExplorerAPITypeBlockscout,
}

var LineaInfo = EthChainInfo{
  ChainInfo: ChainInfo{
    Name: "Linea",
    Slug: "linea",
    AdditionalSlugs: []string{},
    MainnetChainID: ChainID(LineaID),
    ChainID: ChainID(LineaID),
    ExplorerURL: "https://lineascan.build",
  },
  Variation: EthVariationDefault,
  TokenSymbol: "ETH",
  TokenDecimals: 18,
  TokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  PriceTokenAddress: common.HexToAddress("0xe5d7c2a44ffddf6b295a15c148167daaaf5cf34f"),
  WrappedTokenAddress: common.HexToAddress("0xe5D7C2a44FfDDf6b295A15c148167daaAf5Cf34f"),
  ExplorerAPI: "https://api.etherscan.io/v2",
  ExplorerAPIType: ExplorerAPITypeEtherscanV2,
}

var BerachainInfo = EthChainInfo{
  ChainInfo: ChainInfo{
    Name: "Berachain",
    Slug: "berachain",
    AdditionalSlugs: []string{},
    MainnetChainID: ChainID(BerachainID),
    ChainID: ChainID(BerachainID),
    ExplorerURL: "https://berascan.com",
  },
  Variation: EthVariationDefault,
  TokenSymbol: "BERA",
  TokenDecimals: 18,
  TokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  PriceTokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  WrappedTokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  ExplorerAPI: "https://api.etherscan.io/v2",
  ExplorerAPIType: ExplorerAPITypeEtherscanV2,
}

var BlastInfo = EthChainInfo{
  ChainInfo: ChainInfo{
    Name: "Blast Mainnet",
    Slug: "blast-mainnet",
    AdditionalSlugs: []string{},
    MainnetChainID: ChainID(BlastID),
    ChainID: ChainID(BlastID),
    ExplorerURL: "https://blastscan.io",
  },
  Variation: EthVariationOptimism,
  TokenSymbol: "ETH",
  TokenDecimals: 18,
  TokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  PriceTokenAddress: common.HexToAddress("0x4300000000000000000000000000000000000004"),
  WrappedTokenAddress: common.HexToAddress("0x4300000000000000000000000000000000000004"),
  ExplorerAPI: "https://api.etherscan.io/v2",
  ExplorerAPIType: ExplorerAPITypeEtherscanV2,
}

var ChilizInfo = EthChainInfo{
  ChainInfo: ChainInfo{
    Name: "Chiliz",
    Slug: "chiliz",
    AdditionalSlugs: []string{},
    MainnetChainID: ChainID(ChilizID),
    ChainID: ChainID(ChilizID),
    ExplorerURL: "https://chiliscan.com",
  },
  Variation: EthVariationDefault,
  TokenSymbol: "CHZ",
  TokenDecimals: 18,
  TokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  PriceTokenAddress: common.HexToAddress("0x721EF6871f1c4Efe730Dce047D40D1743B886946"),
  WrappedTokenAddress: common.HexToAddress("0x721EF6871f1c4Efe730Dce047D40D1743B886946"),
  ExplorerAPI: "https://api.routescan.io/v2/network/mainnet/evm/88888/etherscan",
  ExplorerAPIType: ExplorerAPITypeEtherscan,
}

var TaikoInfo = EthChainInfo{
  ChainInfo: ChainInfo{
    Name: "Taiko Mainnet",
    Slug: "taiko",
    AdditionalSlugs: []string{},
    MainnetChainID: ChainID(TaikoID),
    ChainID: ChainID(TaikoID),
    ExplorerURL: "https://taikoscan.io",
  },
  Variation: EthVariationDefault,
  TokenSymbol: "ETH",
  TokenDecimals: 18,
  TokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  PriceTokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  WrappedTokenAddress: common.HexToAddress("0xA51894664A773981C6C112C43ce576f315d5b1B6"),
  ExplorerAPI: "https://api.etherscan.io/v2",
  ExplorerAPIType: ExplorerAPITypeEtherscanV2,
}

var KatanaMainnetInfo = EthChainInfo{
  ChainInfo: ChainInfo{
    Name: "Katana Mainnet",
    Slug: "katana",
    AdditionalSlugs: []string{},
    MainnetChainID: ChainID(KatanaMainnetID),
    ChainID: ChainID(KatanaMainnetID),
    ExplorerURL: "https://katanascan.com",
  },
  Variation: EthVariationOptimism,
  TokenSymbol: "ETH",
  TokenDecimals: 18,
  TokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  PriceTokenAddress: common.HexToAddress("0x4200000000000000000000000000000000000006"),
  WrappedTokenAddress: common.HexToAddress("0x4200000000000000000000000000000000000006"),
  ExplorerAPI: "https://api.etherscan.io/v2",
  ExplorerAPIType: ExplorerAPITypeEtherscanV2,
}

var BitlayerInfo = EthChainInfo{
  ChainInfo: ChainInfo{
    Name: "Bitlayer Mainnet",
    Slug: "bitlayer",
    AdditionalSlugs: []string{},
    MainnetChainID: ChainID(BitlayerID),
    ChainID: ChainID(BitlayerID),
    ExplorerURL: "https://www.btrscan.com",
  },
  Variation: EthVariationDefault,
  TokenSymbol: "BTC",
  TokenDecimals: 18,
  TokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  PriceTokenAddress: common.HexToAddress("0xff204e2681a6fa0e2c3fade68a1b28fb90e4fc5f"),
  WrappedTokenAddress: common.HexToAddress("0xff204e2681a6fa0e2c3fade68a1b28fb90e4fc5f"),
  ExplorerAPI: "https://api.btrscan.com/scan",
  ExplorerAPIType: ExplorerAPITypeEtherscan,
}

var ScrollInfo = EthChainInfo{
  ChainInfo: ChainInfo{
    Name: "Scroll",
    Slug: "scroll",
    AdditionalSlugs: []string{},
    MainnetChainID: ChainID(ScrollID),
    ChainID: ChainID(ScrollID),
    ExplorerURL: "https://scrollscan.com",
  },
  Variation: EthVariationDefault,
  TokenSymbol: "ETH",
  TokenDecimals: 18,
  TokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  PriceTokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  WrappedTokenAddress: common.HexToAddress("0x5300000000000000000000000000000000000004"),
  ExplorerAPI: "https://api.etherscan.io/v2",
  ExplorerAPIType: ExplorerAPITypeEtherscanV2,
}

var ZklinkNovaInfo = EthChainInfo{
  ChainInfo: ChainInfo{
    Name: "zkLink Nova",
    Slug: "zklink-nova",
    AdditionalSlugs: []string{},
    MainnetChainID: ChainID(ZklinkNovaID),
    ChainID: ChainID(ZklinkNovaID),
    ExplorerURL: "https://explorer.zklink.io",
  },
  Variation: EthVariationZkSync,
  TokenSymbol: "ETH",
  TokenDecimals: 18,
  TokenAddress: common.HexToAddress("0x000000000000000000000000000000000000800A"),
  PriceTokenAddress: common.HexToAddress("0x000000000000000000000000000000000000800A"),
  WrappedTokenAddress: common.HexToAddress("0x000000000000000000000000000000000000800A"),
  ExplorerAPI: "https://explorer-api.zklink.io",
  ExplorerAPIType: ExplorerAPITypeEtherscan,
}

var SepoliaInfo = EthChainInfo{
  ChainInfo: ChainInfo{
    Name: "Sepolia",
    Slug: "sepolia",
    AdditionalSlugs: []string{},
    MainnetChainID: ChainID(EthereumID),
    ChainID: ChainID(SepoliaID),
    ExplorerURL: "https://sepolia.etherscan.io",
  },
  Variation: EthVariationDefault,
  TokenSymbol: "ETH",
  TokenDecimals: 18,
  TokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  PriceTokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  WrappedTokenAddress: common.HexToAddress("0x1ef5f52bdbe11af2377c58ecc914a8c72ea807cf"),
  ExplorerAPI: "https://api.etherscan.io/v2",
  ExplorerAPIType: ExplorerAPITypeEtherscanV2,
}

var EtherlinkInfo = EthChainInfo{
  ChainInfo: ChainInfo{
    Name: "Etherlink",
    Slug: "etherlink",
    AdditionalSlugs: []string{},
    MainnetChainID: ChainID(EtherlinkID),
    ChainID: ChainID(EtherlinkID),
    ExplorerURL: "https://explorer.etherlink.com",
  },
  Variation: EthVariationDefault,
  TokenSymbol: "XTZ",
  TokenDecimals: 18,
  TokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  PriceTokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  WrappedTokenAddress: common.HexToAddress("0xc9B53AB2679f573e480d01e0f49e2B5CFB7a3EAb"),
  ExplorerAPI: "https://explorer.etherlink.com",
  ExplorerAPIType: ExplorerAPITypeBlockscout,
}

var CornMaizenetInfo = EthChainInfo{
  ChainInfo: ChainInfo{
    Name: "Corn Maizenet",
    Slug: "corn-maizenet",
    AdditionalSlugs: []string{},
    MainnetChainID: ChainID(CornMaizenetID),
    ChainID: ChainID(CornMaizenetID),
    ExplorerURL: "https://maizenet-explorer.usecorn.com",
  },
  Variation: EthVariationOptimism,
  TokenSymbol: "BTCN",
  TokenDecimals: 18,
  TokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  PriceTokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  WrappedTokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  ExplorerAPI: "https://maizenet-explorer.usecorn.com",
  ExplorerAPIType: ExplorerAPITypeBlockscout,
}

var AuroraInfo = EthChainInfo{
  ChainInfo: ChainInfo{
    Name: "Aurora",
    Slug: "aurora",
    AdditionalSlugs: []string{},
    MainnetChainID: ChainID(AuroraID),
    ChainID: ChainID(AuroraID),
    ExplorerURL: "https://explorer.aurora.dev",
  },
  Variation: EthVariationDefault,
  TokenSymbol: "ETH",
  TokenDecimals: 18,
  TokenAddress: common.HexToAddress("0x000000000000000000000000000000000000800A"),
  PriceTokenAddress: common.HexToAddress("0xC9BdeEd33CD01541e1eeD10f90519d2C06Fe3feB"),
  WrappedTokenAddress: common.HexToAddress("0xC9BdeEd33CD01541e1eeD10f90519d2C06Fe3feB"),
  ExplorerAPI: "https://explorer.aurora.dev",
  ExplorerAPIType: ExplorerAPITypeBlockscout,
}

var BlastSepoliaInfo = EthChainInfo{
  ChainInfo: ChainInfo{
    Name: "Blast Testnet",
    Slug: "blast-testnet",
    AdditionalSlugs: []string{},
    MainnetChainID: ChainID(BlastID),
    ChainID: ChainID(BlastSepoliaID),
    ExplorerURL: "https://sepolia.blastscan.io",
  },
  Variation: EthVariationOptimism,
  TokenSymbol: "ETH",
  TokenDecimals: 18,
  TokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  PriceTokenAddress: common.HexToAddress("0x4200000000000000000000000000000000000023"),
  WrappedTokenAddress: common.HexToAddress("0x4200000000000000000000000000000000000023"),
  ExplorerAPI: "https://api.etherscan.io/v2",
  ExplorerAPIType: ExplorerAPITypeEtherscanV2,
}

var AbstractInfo = EthChainInfo{
  ChainInfo: ChainInfo{
    Name: "Abstract",
    Slug: "abstract",
    AdditionalSlugs: []string{},
    MainnetChainID: ChainID(AbstractID),
    ChainID: ChainID(AbstractID),
    ExplorerURL: "https://explorer.mainnet.abs.xyz",
  },
  Variation: EthVariationDefault,
  TokenSymbol: "ETH",
  TokenDecimals: 18,
  TokenAddress: common.HexToAddress("0x000000000000000000000000000000000000800A"),
  PriceTokenAddress: common.HexToAddress("0x000000000000000000000000000000000000800A"),
  WrappedTokenAddress: common.HexToAddress("0x000000000000000000000000000000000000800A"),
  ExplorerAPI: "",
  ExplorerAPIType: ExplorerAPITypeUnknown,
}

var GoatMainnetInfo = EthChainInfo{
  ChainInfo: ChainInfo{
    Name: "Goat Network",
    Slug: "goat",
    AdditionalSlugs: []string{},
    MainnetChainID: ChainID(GoatMainnetID),
    ChainID: ChainID(GoatMainnetID),
    ExplorerURL: "https://explorer.goat.network",
  },
  Variation: EthVariationDefault,
  TokenSymbol: "BTC",
  TokenDecimals: 18,
  TokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  PriceTokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  WrappedTokenAddress: common.HexToAddress("0xbC10000000000000000000000000000000000000"),
  ExplorerAPI: "",
  ExplorerAPIType: ExplorerAPITypeBlockscout,
}

var CustomInfo = EthChainInfo{
  ChainInfo: ChainInfo{
    Name: "Custom",
    Slug: "custom",
    AdditionalSlugs: []string{},
    MainnetChainID: ChainID(CustomID),
    ChainID: ChainID(CustomID),
    ExplorerURL: "",
  },
  Variation: EthVariationDefault,
  TokenSymbol: "ETH",
  TokenDecimals: 18,
  TokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  PriceTokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  WrappedTokenAddress: common.HexToAddress("0x0000000000000000000000000000000000000000"),
  ExplorerAPI: "",
  ExplorerAPIType: ExplorerAPITypeUnknown,
}

var AptosMainnetInfo = ChainInfo{
  Name: "Aptos Mainnet",
  Slug: "aptos",
  AdditionalSlugs: []string{},
  ChainID: ChainID(AptosMainnetID),
  MainnetChainID: ChainID(AptosMainnetID),
  ExplorerURL: "https://explorer.aptoslabs.com",
}

var AptosTestnetInfo = ChainInfo{
  Name: "Aptos Testnet",
  Slug: "aptos-testnet",
  AdditionalSlugs: []string{},
  ChainID: ChainID(AptosTestnetID),
  MainnetChainID: ChainID(AptosMainnetID),
  ExplorerURL: "https://explorer.aptoslabs.com",
}

var AptosMovementTestnetInfo = ChainInfo{
  Name: "Movement Testnet",
  Slug: "movement-testnet",
  AdditionalSlugs: []string{},
  ChainID: ChainID(AptosMovementTestnetID),
  MainnetChainID: ChainID(AptosMovementMainnetID),
  ExplorerURL: "https://explorer.movementnetwork.xyz",
}

var AptosMovementMainnetInfo = ChainInfo{
  Name: "Movement Mainnet",
  Slug: "movement",
  AdditionalSlugs: []string{},
  ChainID: ChainID(AptosMovementMainnetID),
  MainnetChainID: ChainID(AptosMovementMainnetID),
  ExplorerURL: "https://explorer.movementnetwork.xyz",
}

var InitiaEchelonInfo = ChainInfo{
  Name: "Initia Echelon",
  Slug: "initia-echelon",
  AdditionalSlugs: []string{},
  ChainID: ChainID(InitiaEchelonID),
  MainnetChainID: ChainID(InitiaEchelonID),
  ExplorerURL: "https://scan.initia.xyz/echelon-1",
}

var SuiMainnetInfo = ChainInfo{
  Name: "Sui Mainnet",
  Slug: "sui",
  AdditionalSlugs: []string{},
  ChainID: ChainID(SuiMainnetID),
  MainnetChainID: ChainID(SuiMainnetID),
  ExplorerURL: "https://suiscan.xyz/mainnet",
}

var SuiTestnetInfo = ChainInfo{
  Name: "Sui Testnet",
  Slug: "sui-testnet",
  AdditionalSlugs: []string{},
  ChainID: ChainID(SuiTestnetID),
  MainnetChainID: ChainID(SuiMainnetID),
  ExplorerURL: "https://suiscan.xyz/testnet",
}

var IotaMainnetInfo = ChainInfo{
  Name: "IOTA Mainnet",
  Slug: "iota",
  AdditionalSlugs: []string{},
  ChainID: ChainID(IotaMainnetID),
  MainnetChainID: ChainID(IotaMainnetID),
  ExplorerURL: "https://iotascan.com/mainnet",
}

var IotaTestnetInfo = ChainInfo{
  Name: "IOTA Testnet",
  Slug: "iota-testnet",
  AdditionalSlugs: []string{},
  ChainID: ChainID(IotaTestnetID),
  MainnetChainID: ChainID(IotaMainnetID),
  ExplorerURL: "https://iotascan.com/testnet",
}

var SolanaMainnetInfo = ChainInfo{
  Name: "Solana Mainnet",
  Slug: "solana",
  AdditionalSlugs: []string{},
  ChainID: ChainID(SolanaMainnetID),
  MainnetChainID: ChainID(SolanaMainnetID),
  ExplorerURL: "https://solscan.io/",
}

var SolanaTestnetInfo = ChainInfo{
  Name: "Solana Testnet",
  Slug: "solana-testnet",
  AdditionalSlugs: []string{},
  ChainID: ChainID(SolanaTestnetID),
  MainnetChainID: ChainID(SolanaMainnetID),
  ExplorerURL: "https://solscan.io/",
}

var SolanaPythInfo = ChainInfo{
  Name: "Pyth",
  Slug: "pyth",
  AdditionalSlugs: []string{},
  ChainID: ChainID(SolanaPythID),
  MainnetChainID: ChainID(SolanaPythID),
  ExplorerURL: "https://solscan.io/",
}

var FuelMainnetInfo = ChainInfo{
  Name: "Fuel Mainnet",
  Slug: "fuel",
  AdditionalSlugs: []string{},
  ChainID: ChainID(FuelMainnetID),
  MainnetChainID: ChainID(FuelMainnetID),
  ExplorerURL: "https://app.fuel.network",
}

var FuelTestnetInfo = ChainInfo{
  Name: "Fuel Testnet",
  Slug: "fuel-testnet",
  AdditionalSlugs: []string{},
  ChainID: ChainID(FuelTestnetID),
  MainnetChainID: ChainID(FuelMainnetID),
  ExplorerURL: "https://app-testnet.fuel.network",
}

var InjectiveMainnetInfo = ChainInfo{
  Name: "Injective",
  Slug: "injective",
  AdditionalSlugs: []string{},
  ChainID: ChainID(InjectiveMainnetID),
  MainnetChainID: ChainID(InjectiveMainnetID),
  ExplorerURL: "https://injscan.com/",
}

var InjectiveTestnetInfo = ChainInfo{
  Name: "Injective Testnet",
  Slug: "injective-testnet",
  AdditionalSlugs: []string{},
  ChainID: ChainID(InjectiveTestnetID),
  MainnetChainID: ChainID(InjectiveMainnetID),
  ExplorerURL: "https://testnet.explorer.injective.network",
}

var StarknetMainnetInfo = ChainInfo{
  Name: "Starknet",
  Slug: "starknet",
  AdditionalSlugs: []string{},
  ChainID: ChainID(StarknetMainnetID),
  MainnetChainID: ChainID(StarknetMainnetID),
  ExplorerURL: "https://starkscan.co",
}

var StarknetSepoliaInfo = ChainInfo{
  Name: "Starknet Sepolia",
  Slug: "starknet-sepolia",
  AdditionalSlugs: []string{},
  ChainID: ChainID(StarknetSepoliaID),
  MainnetChainID: ChainID(StarknetSepoliaID),
  ExplorerURL: "https://sepolia.starkscan.co",
}

var BTCMainnetInfo = ChainInfo{
  Name: "Bitcoin Mainnet",
  Slug: "btc",
  AdditionalSlugs: []string{},
  ChainID: ChainID(BTCMainnetID),
  MainnetChainID: ChainID(BTCMainnetID),
  ExplorerURL: "https://mempool.space",
}

var BTCTestnetInfo = ChainInfo{
  Name: "Bitcoin Mainnet",
  Slug: "btc-signet",
  AdditionalSlugs: []string{},
  ChainID: ChainID(BTCTestnetID),
  MainnetChainID: ChainID(BTCTestnetID),
  ExplorerURL: "https://mempool.space/testnet4",
}


var NonEthChains = []*ChainInfo{&AptosMainnetInfo, &AptosTestnetInfo, &AptosMovementTestnetInfo, &AptosMovementMainnetInfo, &InitiaEchelonInfo, &SuiMainnetInfo, &SuiTestnetInfo, &IotaMainnetInfo, &IotaTestnetInfo, &SolanaMainnetInfo, &SolanaTestnetInfo, &SolanaPythInfo, &FuelMainnetInfo, &FuelTestnetInfo, &InjectiveMainnetInfo, &InjectiveTestnetInfo, &StarknetMainnetInfo, &StarknetSepoliaInfo, &BTCMainnetInfo, &BTCTestnetInfo}

