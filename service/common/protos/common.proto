syntax = "proto3";

package common;

option go_package = "sentioxyz/sentio-core/service/common/protos";
import "google/protobuf/descriptor.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/struct.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "google/type/money.proto";

message UsageTracker {
  string api_sku = 1;
  string webui_sku = 2;
  string project_id_field = 3;
  string project_slug_field = 4;
  string project_owner_field = 5;
  string version_field = 6;

  message SkuWithFieldValue {
    repeated string field_value = 1;
    string api_sku = 2;
    string webui_sku = 3;
  }
  message SkusByField {
    string field_name = 1;
    repeated SkuWithFieldValue skus = 2;
  }
  message CustomSkus {
    repeated SkusByField skus_by_field = 1;
    enum SkuOp {
      MIN = 0;
      SUM = 1;
      MAX = 2;
    }
    SkuOp multiple_field_skus_op = 2;
  }
  CustomSkus custom_skus = 7; // will overwrite the global sku if match the custom skus
}

extend google.protobuf.MethodOptions {
  optional UsageTracker track_usage = 50000;
}

message Auth {
  repeated string permission = 1;
  map<string, string> metadata = 2;
  bool allow_anonymous = 3;
}

extend google.protobuf.MethodOptions {
  optional Auth auth = 50002;
}


message AccessMeta {
  string project_id_field = 1;
  string project_slug_field = 2;
  string owner_id_field = 3;
  string owner_name_field = 4;
  string processor_id_field = 5;
  string processor_version_field = 6;
}

extend google.protobuf.MethodOptions {
  optional AccessMeta access_metric = 50001;
}

enum Tier {
  FREE = 0;
  DEV = 1;
  PRO = 2;
  ENTERPRISE = 3;

  ANONYMOUS = 16;
}

message User {
  string id = 1;
  string email = 2;
  bool email_verified = 3;
  string last_name = 4;
  string first_name = 5;
  string locale = 6;
  string nickname = 8;
  string picture = 9;
  string sub = 10;
  int64  updated_at = 11;
  int64  created_at = 12;
  string username = 13;
  AccountStatus account_status = 14;
  Tier tier = 15;
  bool is_organization = 16; // true if the user is actually an organization account
  enum AccountStatus {
    PENDING = 0;
    SET_USERNAME = 1;
    BANNED = 9;
    ACTIVE = 10;
  }
  string wallet_address = 17;
  repeated string identities = 18;
}

// The same to user but with sensitive data removed.
message UserInfo {
  string id = 1;
  string last_name = 4;
  string first_name = 5;
  string nickname = 8;
  string picture = 9;
  string username = 13;
}

message Owner {
  oneof owner_oneof {
    User user = 1;
    Organization organization = 2;
  }
  Tier tier = 3;
}

message Project {
  string id = 1;
  string display_name = 2;
  string description = 3;
  int64  created_at = 4;
  int64  updated_at = 5;
  // {ownerName}/{slug} is the unique name of the project
  string slug = 6;
  string ownerId = 7;
  Owner owner = 8;
  enum Visibility {
    PUBLIC = 0;
    PRIVATE = 1;
  }
  Visibility visibility = 10;
  enum Type {
    SENTIO = 0;
    SUBGRAPH = 1;
    ACTION = 2;
  }
  Type type = 16;
  message ProjectMember {
    UserInfo user = 1;
    string role = 2;
  }
  repeated ProjectMember members = 11;
  bool multi_version = 12;
  string ownerName = 13;
  repeated Channel notification_channels = 14;
  repeated ProjectView views = 15;
  bool superset_enable = 17 [deprecated = true];
  ProjectSuperset superset = 18 [deprecated = true];
  bool enable_disk = 19;
  bool enable_materialized_view = 20 [deprecated = true];
  TimeRangeLite default_timerange = 21;
  optional CommunityProject community_project = 22;
}

message CommunityProject {
  string dash_alias = 1;
  optional bool curated = 2;
  map<string, StringList> chain = 3;
}

message ProjectInfo {
  string id = 1;
  string display_name = 2;
  string description = 3;
  int64  created_at = 4;
  int64  updated_at = 5;
  string slug = 6;
  string owner = 7;
  Project.Visibility visibility = 10;
  Project.Type type = 11;
  bool multi_version = 12;
  bool superset_enable = 13 [deprecated = true];
  ProjectSuperset superset = 14 [deprecated = true];
  bool enable_disk = 19;
  bool enable_materialized_view = 20 [deprecated = true];
  TimeRangeLite default_timerange = 21;
}

message EventLogColumn {
  string id = 1;
  int32 size = 2;
  string name = 3;
  string accessorKey = 4;
  bool enableHiding = 5;
  bool enableSorting = 6;
  bool enableResizing = 7;
}

message ColumnState {
  map<string, int32> columnSizing = 1;
  map<string, bool> columnVisibility = 2;
  repeated string columnOrder = 3;
  message Sort {
    string id = 1;
    bool desc = 2;
  }
  repeated Sort sorting = 4;
}

message EventLogConfig {
  repeated EventLogColumn columns = 1;
  ColumnState state = 2;
}

message ProjectView {
  string id = 1;
  string project_id = 2;
  string name = 3;
  message ProjectViewConfig {
    EventLogConfig event_log = 1;
  }
  ProjectViewConfig config = 4;
}

message Organization {
  string id = 1;
  string oid = 2;
  string name = 3;
  int64  created_at = 4;
  int64  updated_at = 5;
  message Member {
    UserInfo user = 1;
    OrganizationRole role = 2;
  }
  repeated Member members = 6;
  string display_name = 7;
  string logo_url = 8;
  repeated ProjectInfo projects = 9;
  Tier tier = 10;
}

enum OrganizationRole {
  ORG_MEMBER = 0;
  ORG_ADMIN = 1;
}

message ApiKey {
  string id = 1;
  string name = 2;
  //  string project_id = 3;
  string owner_id = 4;
  repeated string scopes = 5;
  int64 created_at = 6;
  int64 updated_at = 7;
  int64 expires_at = 8;
  string source = 9;
  string owner_type = 10;
  bool revealable = 11;
  map<string, ProjectInfo> scope_projects = 12;
}

// Time range
message TimeRangeLite {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Time range"
      description: "start and end time of the time range, Find more: https://docs.sentio.xyz/reference/data#time-range-configuration-guide"
      required: ["start", "end", "step"]
    }
    external_docs: {
      url: "https://docs.sentio.xyz/reference/data#time-range-configuration-guide";
      description: "Find more about time range here.";
    }
    example: '{\"start\": \"now-1M\",\"end\": \"now\",\"step\": 86400,\"timezone\": \"Europe/London\"}';
  };
  string start = 1;
  string end = 2;
  // interval in seconds between each data point
  int32 step = 3;
  string timezone = 4;
}

message TimeRange {
  message TimeLike {
    oneof TimeLike {
      RelativeTime relative_time = 1;
      int64 absolute_time = 2;
    }
  }
  message RelativeTime {
    string unit = 1;
    int32 value = 2;
    string align = 3;
  }
  TimeLike start = 1;
  TimeLike end = 2;
  int64 step = 3;
  // TODO remove step in favor of interval
  Duration interval = 4;
  string timezone = 5;
}

message Duration {
  double value = 1;
  string unit = 2;
}

message Formula {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "formula"
      description: "the formula to combine multiple queries"
    }

    example: '{ "expression" : "sum(a)+sum(b)" }';
  };
  string expression = 1;
  //  bool enabled = 2;
  string alias = 3;
  string id = 4;
  bool disabled = 5;
  repeated Function functions = 6;
  string color = 7;
}

message Argument {
  oneof argument_value {
    string string_value = 1;
    int32 int_value = 2;
    double double_value = 3;
    bool bool_value = 4;
    Duration duration_value = 5;
  }
}

message Function {
  string name = 1;
  repeated Argument arguments = 2;
}

// Metrics query
//
// Find more about prometheus query language: https://prometheus.io/docs/prometheus/latest/querying/basics
message Query {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Metrics query"
      description: "the query to fetch metrics data, promql"
    }
    external_docs: {
      url: "https://prometheus.io/docs/prometheus/latest/querying/basics/";
      description: "Find more about prometheus query language here.";
    }
    example: '{"query": "transfer_sum", "alias": "transfer (24h)", "id": "a", "labelSelector": {}, "aggregate": null, "functions": [ { "name": "rollup_sum", "arguments": [ { "durationValue": { "value": 1, "unit": "d" } } ] } ], "disabled": false}';
  };
  // the promql query or the metric name
  string query = 1;
  // the alias of the query
  string alias = 2;
  // the id of the query
  string id = 4;
  map<string, string> label_selector = 5;
  Aggregate aggregate = 6;
  repeated Function functions = 7;
  string color = 9;

  // hide the result, usually used for formula, default is false
  bool disabled = 8;
}

enum JoinOperator {
  AND = 0;
  OR = 1;
  THEN = 2;
}

message Aggregate {
  enum AggregateOps{
    AVG = 0;
    SUM = 1;
    MIN = 2;
    MAX = 3;
    COUNT = 4;
  }
  AggregateOps op = 1;
  repeated string grouping = 2;
}

// TODO maybe MetricQuery should use this as well
message Selector {
  // TODO add Date Value and List Value and its data type
  enum OperatorType {
    EQ = 0;
    NEQ = 1;
    EXISTS = 9;
    NOT_EXISTS = 10;

    GT = 2;
    GTE = 3;
    LT = 4;
    LTE = 5;
    BETWEEN = 7;
    NOT_BETWEEN = 8;

    CONTAINS = 11;
    NOT_CONTAINS = 12;

    IN = 15;
    NOT_IN = 16;

    IN_COHORTS = 13;
    NOT_IN_COHORTS = 14;
  }

  string key = 1;
  OperatorType operator = 2;
  repeated Any value = 3;
}

// TODO migrate segmentationQuery to use this
message SelectorExpr {
  oneof expr {
    Selector selector = 1;
    LogicExpr logic_expr = 2;
  }

  message LogicExpr {
    repeated SelectorExpr expressions = 1;
    JoinOperator operator = 2; // default is AND
  }
}

message CohortsGroup {
  JoinOperator join_operator = 1;
  repeated CohortsFilter filters = 2;
}

message CohortsQuery {
  JoinOperator join_operator = 1;  // not support THEN
  repeated CohortsGroup groups = 2;
  string name = 3;
  string id = 4;
}

message SegmentationQuery {
  message Resource {
    string name = 1;
    ResourceType type = 2;
    oneof cohorts_value {
      string cohorts_id = 3;
      CohortsQuery cohorts_query = 4;
    }
  }

  enum ResourceType {
    EVENTS = 0;
    COHORTS = 1 [deprecated=true];
  }

  message Aggregation {
    message Total {}
    message Unique {}
    message CountUnique {
      Duration duration = 1;
    }
    message AggregateProperties {
      enum AggregationType {
        SUM = 0;
        CUMULATIVE_SUM = 6;

        AVG = 1;
        MEDIAN = 2;
        MIN = 3;
        MAX = 4;

        DISTINCT_COUNT = 5;
        CUMULATIVE_DISTINCT_COUNT = 9;
        CUMULATIVE_COUNT = 12;

        LAST = 7;
        CUMULATIVE_LAST = 10;
        FIRST = 8;
        CUMULATIVE_FIRST = 11;

        PERCENTILE_25TH = 20;
        PERCENTILE_75TH = 21;
        PERCENTILE_90TH = 22;
        PERCENTILE_95TH = 23;
        PERCENTILE_99TH = 24;
      }
      AggregationType type = 1;
      string property_name = 2;
    }
    oneof value {
      Total total = 1;
      Unique unique = 2;
      CountUnique count_unique = 3;
      AggregateProperties aggregate_properties = 4;
    }
  }

  message SelectorExpr {
    oneof expr {
      Selector selector = 1;
      LogicExpr logic_expr = 2;
    }

    message LogicExpr {
      repeated SelectorExpr expressions = 1;
      JoinOperator operator = 2; // default is AND
    }
  }

  Resource resource = 1;
  string alias = 2;
  string id = 3;
  Aggregation aggregation = 4;
  SelectorExpr selector_expr = 5;
  repeated string group_by = 6;
  int32 limit = 8;
  repeated Function functions = 9;
  string color = 10;

  bool disabled = 7;
}

message CohortsFilter {
  message Aggregation {
    message Total {}
    message AggregateProperties {
      enum AggregationType {
        SUM = 0;
        AVG = 1;
        MEDIAN = 2;
        MIN = 3;
        MAX = 4;
        DISTINCT_COUNT = 5;
        LAST = 6;
        FIRST = 7;
      }
      AggregationType type = 1;
      string property_name = 2;
    }

    enum OperatorType {
      EQ = 0;
      NEQ = 1;
      GT = 2;
      GTE = 3;
      LT = 4;
      LTE = 5;
      BETWEEN = 7;
      NOT_BETWEEN = 8;
    }

    oneof key {
      Total total = 1;
      AggregateProperties aggregate_properties = 2;
    }
    OperatorType operator = 5;
    repeated Any value = 6;
  }

  bool symbol = 1;
  string name = 2;
  Aggregation aggregation = 3;
  SelectorExpr selector_expr = 4;
  TimeRangeLite time_range = 5;
}

enum Permission {
  READ = 0;
  WRITE = 1;
  ADMIN = 2;
}

message Contract {
  string address = 1;
  string name = 2;
  string chain_id = 3;
  string id = 5;
  enum Source {
    PROCESSOR = 0;
    UI = 1;
  }
  Source source = 6;
}

message ErrorRecord {
  string id = 1;
  int32 namespace = 2;
  int32 code = 3; // same as google.rpc.status.Status.code
  int32 namespace_code = 4; // additional codes definted in the namespace
  string message = 5;
  // details
  google.protobuf.Timestamp created_at = 7;
}

message StringList {
  repeated string values = 1;
  // JoinOperator operator = 2; // this field should implement in the future
}

message Any {
  oneof any_value {
    int32 int_value = 1;
    int64 long_value = 2;
    double double_value = 3;
    string string_value = 4;
    bool bool_value = 5;
    google.protobuf.Timestamp date_value = 6;
    StringList list_value = 7;
  }
}

// TODO, finish this
message Channel {
  enum Type {
    UNKNOWN = 0;
    EMAIL = 1;
    SLACK = 2;
    TELEGRAM = 3;
    WEBHOOK = 4;
    DISCORD = 5;
    PAGERDUTY = 6;
  }
  string id = 1;
  string project_id = 2;
  Type type = 3;
  string slack_webhook_url = 4;
  string email_address = 5;
  string name = 6;
  string custom_webhook_url = 7;
  map<string, string> custom_headers = 8;
  string telegram_reference = 9;
  string telegram_chat_id = 10;
  string slack_team = 11;
  string slack_channel = 12;
  google.protobuf.Struct pagerduty_config = 13;
}

message EventLogEntry {
  string message = 1;
  int64 timestamp = 2;
  string log_level = 3;
  string log_type = 4;
  string contract_name = 5;
  string contract_address = 6;
  uint64 block_number = 7;
  string chain_id = 8;
  google.protobuf.Struct attributes = 9;
  string id = 10;
  string transaction_hash = 11;
  string highlighted_message = 12;
  string distinct_id = 13;
  string event_name = 14;
  int32 log_index = 15;
  int32 transaction_index = 16;
}

message Matrix {
  message Sample {
    Metric metric = 1;
    repeated Value values = 2;
  }

  message Metric {
    string name = 1;
    map<string, string> labels = 2;
    string display_name = 4;
  }

  message Value {
    int64 timestamp = 1;
    double value = 2;
  }

  repeated Sample samples = 1;
  int32 total_samples = 2;
}

message DashboardSharingRequest {
  string sharing_id = 1;
  string panel_id = 2;
  int32 samples_limit = 5;
  common.TimeRangeLite time_range = 6;
  int32 version = 7;
  google.protobuf.Struct variables = 8;
  int32 samples_offset = 9;
}

message UserUsage {
  Tier tier = 1;
  int32 projects = 2;
  int32 alerts = 3;
  message ProjectUsage {
    string owner = 1;
    string slug = 2;
    uint64 cost = 3;
  }
  map<string, ProjectUsage> usage_by_projects = 4;
}

message CoinID {
  message AddressIdentifier {
    string address = 1;
    string chain = 2;
  }
  oneof id {
    string symbol = 1;
    AddressIdentifier address = 2;
  }
}

message PriceSegmentationQuery {
  string id = 1;
  string alias = 2;
  repeated CoinID coin_id = 3;
  string color = 4;

  bool disabled = 9;
}

message TabularData {
  enum ColumnType {
    STRING = 0;
    NUMBER = 1;
    BOOLEAN = 2;
    LIST = 3;
    TIME = 4;
    MAP = 5;
    JSON = 6;
    TOKEN = 7;
    DYNAMIC = 8;
  }
  repeated string columns = 1;
  map<string, ColumnType> column_types = 2;
  repeated google.protobuf.Struct rows = 3;
  google.protobuf.Timestamp generated_at = 4;
  // The pagination cursor for the next page of results. If present, use this value in the `cursor` field of the next request to retrieve subsequent data. If null or empty, there are no more results.
  string cursor = 5;
}

message Account {
  string name = 1;
  string id = 2;
  string contact = 3;
  google.protobuf.Struct payment_info = 4;
  string ownerId = 7;
  common.Owner owner = 8;
  string address = 9;
  PayMethod payment_method = 10;
  string usage_over_cap_limit = 11;
  string status = 12;
  google.type.Money prepaid_balance = 13;
}

enum PayMethod {
  CREDIT_CARD = 0;
  INVOICE_FIAT = 1;
  INVOICE_CRYPTO = 2;
}

message ImportedProject {
  // name of the imported project
  string name = 1;
  common.Project project = 2;
  common.Project imported = 3;
}

message ProjectSuperset {
  string project_id = 1;
  google.protobuf.Timestamp created_at = 2;
  google.protobuf.Timestamp sync_at = 3;
}

message SegmentParameter {
  oneof parameter {
    string cohort_id = 1;
    bool all_users = 2;
  }
}

message RetentionQuery {
  enum Criteria {
    OnOrAfter = 0;
    On = 1;
  }

  message Filter {
    message TimeFilter {
      enum Type {
        Disable = 0;
        FirstInTimeRange = 1;
        FirstInGlobal = 2;
      }
      Type type = 1;
    }
    SelectorExpr property_filter = 1;
    TimeFilter time_filter = 2;
  }

  message Resource {
    repeated string event_names = 1;
    Filter filter = 2;
  }

  message Interval {
    enum Unit {
      Day = 0;
      Week = 1;
      Month = 2;
    }
    int32 value = 1;
    Unit unit = 2;
  }

  repeated Resource resources = 1; // only support 2 resources
  Criteria criteria = 2;
  Interval interval = 3;
  SelectorExpr selector_expr = 4;
  repeated string group_by = 5;
  repeated SegmentParameter segment_by = 6;
  int32 window_size = 7;
}

message RetentionMatrix {
  message Sample {
    google.protobuf.Timestamp time = 1;
    SegmentParameter segment_parameter = 2;
    map<string, string> labels = 3;
    int32 total_count = 4;
    repeated int32 counts = 5;
    repeated double rates = 6;
  }
  repeated Sample samples = 1;
}

message ComputeStats {
  google.protobuf.Timestamp computed_at = 1;
  int64 compute_cost_ms = 2;
  uint64 binary_version_hash = 3;
  string computed_by = 4;
  bool is_cached = 5;
  bool is_refreshing = 6;

  message ClickhouseStats {
    uint64 read_rows = 1;
    uint64 read_bytes = 2;
    uint64 memory_usage = 3;
    uint64 query_duration_ms = 4;
    uint64 result_rows = 5;
    uint64 result_bytes = 6;
  }

  ClickhouseStats clickhouse_stats = 7;
}

message ClickhouseStatus {
  message Mutation {
    int32 undone_cnt = 1;
  }
  message Process {
    string query = 1;
    string query_kind = 2;
    double elapsed = 3;
  }
  message Processes {
    repeated Process processes = 1;
  }

  map<int32, Mutation> mutations = 1;
  map<int32, Processes> processes = 2;
}

message ProjectVariables {
  string project_id = 1;
  repeated Variable variables = 2;

  message Variable {
    string key = 3;
    string value = 4;
    bool is_secret = 7;
    google.protobuf.Timestamp updated_at = 5;
  }
}

message CachePolicy {
  // how long the cache will be stored before it is evicted
  int32 cache_ttl_secs = 1;
  // how long the cache will be refreshed in the background
  int32 cache_refresh_ttl_secs = 2;
  // force refresh the cache now
  bool force_refresh = 3;
  // do not use cache
  bool no_cache = 4;
}

message Notification {
  string id = 1;
  string project_id = 2;
  string source = 3;
  string level = 4;
  string message = 5;
  google.protobuf.Timestamp created_at = 6;
  NotificationType type = 8;
  string owner_id = 9;
  Owner owner = 10;
  Project project = 11;
  map<string, string> attributes = 12;
  bool read = 13;
  uint32 repeat = 14;
}

enum NotificationType {
  GENERAL = 0;
  // processor types
  PROCESSOR_UPLOAD_FAILED = 101;
  PROCESSOR_UPLOAD_SUCCESS = 102;
  PROCESSOR_OBSOLETED = 103;
  PROCESSOR_STOPPED = 104;
  PROCESSOR_ACTIVATED = 105;
  PROCESSOR_GENERAL = 106;
  PROCESSOR_ERROR = 107;
  // exports types
  EXPORT_TASK_FAILED = 201;
  EXPORT_TASK_SUCCESS = 202;

  // billing types
  BILLING_INVOICE = 301;
  BILLING_PAYMENT = 302;
  BILLING_SUBSCRIPTION = 303;
  BILLING_USAGE = 304;
}



message RichValue {
  oneof value {
    NullValue null_value = 1;
    int32 int_value = 2;
    int64 int64_value = 13;
    double float_value = 3;
    bytes bytes_value = 4;
    bool bool_value = 5;
    string string_value = 6;
    google.protobuf.Timestamp timestamp_value = 7;
    BigInteger bigint_value = 8;
    BigDecimal bigdecimal_value = 9;
    RichValueList list_value = 10;
    RichStruct struct_value = 11;
    TokenAmount token_value = 12;
  }
  enum NullValue {
    NULL_VALUE = 0;
  }
}

message RichStruct {
  map<string, RichValue> fields = 1;
}

message RichValueList {
  repeated RichValue values = 1;
}

message RichStructList {
  repeated RichStruct entities = 1;
}

message BigDecimal {
  BigInteger value = 1;
  int32 exp = 2;
}

message BigInteger {
  bool negative = 1;
  bytes data = 2;
}

message TokenAmount {
  CoinID token = 1;
  BigDecimal amount = 2;
  google.protobuf.Timestamp specified_at = 3; // optional, if not specified, it will use block_time in eventlogs
}

message RequestLog {
  string request_id = 1;
  string endpoint_id = 2;
  string owner = 3;
  string slug = 4;
  uint32 status_code = 5;
  string error = 6;
  bytes request_body = 7;
  google.protobuf.Struct request_header = 8;
  bytes response_body = 9;
  google.protobuf.Struct response_header = 10;
  google.protobuf.Timestamp created_at = 11;
  uint64 duration = 12;
  uint64 query_duration = 13;
  string method = 14;
  string rpc_node_id = 15;
  string origin_url = 16;
  string endpoint_type = 17;
  string chain_id = 18;
}

// ChatType defines the possible types of chat interactions
enum ChatType {
  CHAT_TYPE_UNSPECIFIED = 0;  // Default unspecified type
  CHAT_TYPE_CHAT = 1;         // Regular conversation
  CHAT_TYPE_ACTION = 2;       // Action-oriented interaction
}

// HistoryChat represents a saved chat conversation
message HistoryChat {
  string id = 1;                          // Unique identifier
  string title = 2;                       // Chat title
  google.protobuf.ListValue messages = 4; // Message history
  ChatType type = 5;                      // Type of chat interaction
  google.protobuf.Struct meta = 6;        // Extensible metadata
  google.protobuf.Timestamp created_at = 7;  // Creation timestamp
  google.protobuf.Timestamp updated_at = 8;  // Last update timestamp
  optional string project_owner = 9;      // Owner of the project
  optional string project_slug = 10;      // Project identifier
}


message ProjectOwnerAndSlug {
  // username or organization name
  string owner_name = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {field_configuration: {path_param_name: "owner"}}];
  // project slug
  string slug = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {field_configuration: {path_param_name: "slug"}}];
}