load("@rules_go//go:def.bzl", "go_library")

go_library(
    name = "rpc",
    srcs = [
        "client.go",
        "healthz.go",
        "metric.go",
        "options.go",
        "server.go",
    ],
    importpath = "sentioxyz/sentio-core/service/common/rpc",
    visibility = ["//visibility:public"],
    deps = [
        "//common/errgroup",
        "//common/log",
        "//service/common/protos",
        "@com_github_felixge_httpsnoop//:httpsnoop",
        "@com_github_gorilla_handlers//:handlers",
        "@com_github_grpc_ecosystem_go_grpc_middleware_v2//interceptors/recovery",
        "@com_github_grpc_ecosystem_go_grpc_middleware_v2//interceptors/retry",
        "@com_github_invisionapp_go_health_v2//:go-health",
        "@com_github_invisionapp_go_health_v2//checkers",
        "@com_github_invisionapp_go_health_v2//handlers",
        "@com_github_soheilhy_cmux//:cmux",
        "@grpc_ecosystem_grpc_gateway//runtime",
        "@io_gorm_gorm//:gorm",
        "@io_opentelemetry_go_contrib_instrumentation_google_golang_org_grpc_otelgrpc//:otelgrpc",
        "@io_opentelemetry_go_otel//:otel",
        "@io_opentelemetry_go_otel//attribute",
        "@io_opentelemetry_go_otel_metric//:metric",
        "@io_opentelemetry_go_otel_trace//:trace",
        "@org_golang_google_grpc//:grpc",
        "@org_golang_google_grpc//codes",
        "@org_golang_google_grpc//credentials",
        "@org_golang_google_grpc//credentials/insecure",
        "@org_golang_google_grpc//metadata",
        "@org_golang_google_grpc//status",
        "@org_golang_google_protobuf//encoding/protojson",
        "@org_golang_google_protobuf//proto",
        "@org_golang_google_protobuf//reflect/protoreflect",
        "@org_golang_google_protobuf//reflect/protoregistry",
        "@org_uber_go_zap//:zap",
    ],
)
